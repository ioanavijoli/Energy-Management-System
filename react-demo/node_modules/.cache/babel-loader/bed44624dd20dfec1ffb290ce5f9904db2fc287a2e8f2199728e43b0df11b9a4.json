{"ast":null,"code":"import _toConsumableArray from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UserList from './UserList';\nimport ChatHistory from './ChatHistory';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatWindow = function ChatWindow() {\n  _s();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedUser = _useState2[0],\n    setSelectedUser = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var connectToChat = function connectToChat(userName) {\n    // Implement your logic to connect to chat here\n    setSelectedUser(\"userName\");\n  };\n  var sendMessage = function sendMessage(from, text) {\n    // Implement your logic to send messages here\n    var newMessage = {\n      from: from,\n      text: text\n    };\n    setMessages([].concat(_toConsumableArray(messages), [newMessage]));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container clearfix\",\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      connectToChat: connectToChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ChatHistory, {\n      messages: messages,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      sendMessage: sendMessage,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n_s(ChatWindow, \"R0h+Z7ZLP+pCaRLdlO8xhK3RPyk=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","UserList","ChatHistory","MessageInput","jsxDEV","_jsxDEV","ChatWindow","_s","_useState","_useState2","_slicedToArray","selectedUser","setSelectedUser","_useState3","_useState4","messages","setMessages","connectToChat","userName","sendMessage","from","text","newMessage","concat","_toConsumableArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport UserList from './UserList';\nimport ChatHistory from './ChatHistory';\nimport MessageInput from './MessageInput';\n\nconst ChatWindow = () => {\n    const [selectedUser, setSelectedUser] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const connectToChat = (userName) => {\n        // Implement your logic to connect to chat here\n        setSelectedUser(\"userName\");\n    };\n\n    const sendMessage = (from, text) => {\n        // Implement your logic to send messages here\n        const newMessage = { from, text };\n        setMessages([...messages, newMessage]);\n    };\n\n    return (\n        <div className=\"container clearfix\">\n            <UserList connectToChat={connectToChat} />\n            <ChatHistory messages={messages} selectedUser={selectedUser} />\n            <MessageInput sendMessage={sendMessage} selectedUser={selectedUser} />\n        </div>\n    );\n};\n\nexport default ChatWindow;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAAAC,EAAA;EACrB,IAAAC,SAAA,GAAwCR,QAAQ,CAAC,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAgCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,QAAQ,EAAK;IAChC;IACAN,eAAe,CAAC,UAAU,CAAC;EAC/B,CAAC;EAED,IAAMO,WAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAI,EAAEC,IAAI,EAAK;IAChC;IACA,IAAMC,UAAU,GAAG;MAAEF,IAAI,EAAJA,IAAI;MAAEC,IAAI,EAAJA;IAAK,CAAC;IACjCL,WAAW,IAAAO,MAAA,CAAAC,kBAAA,CAAKT,QAAQ,IAAEO,UAAU,EAAC,CAAC;EAC1C,CAAC;EAED,oBACIjB,OAAA;IAAKoB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BrB,OAAA,CAACJ,QAAQ;MAACgB,aAAa,EAAEA;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,eAC1C1B,OAAA,CAACH,WAAW;MAACa,QAAQ,EAAEA,QAAS;MAACJ,YAAY,EAAEA;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,eAC/D1B,OAAA,CAACF,YAAY;MAACgB,WAAW,EAAEA,WAAY;MAACR,YAAY,EAAEA;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACrE,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtBID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}