{"ast":null,"code":"import _toConsumableArray from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nvar ChatWindow = function ChatWindow() {\n  _s();\n  var _useState = useState(new Map()),\n    _useState2 = _slicedToArray(_useState, 2),\n    privateChats = _useState2[0],\n    setPrivateChats = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    publicChats = _useState4[0],\n    setPublicChats = _useState4[1];\n  var _useState5 = useState(\"CHATROOM\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tab = _useState6[0],\n    setTab = _useState6[1];\n  var _useState7 = useState({\n      username: '',\n      receivername: '',\n      connected: false,\n      message: ''\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userData = _useState8[0],\n    setUserData = _useState8[1];\n  var _ref = [],\n    clients = _ref[0],\n    admins = _ref[1];\n  var role;\n  var headers = {\n    Authorization: localStorage.getItem('token')\n  };\n  useEffect(function () {\n    handleUsername();\n  }, []);\n  var connect = function connect() {\n    var Sock = new SockJS('http://localhost:8083/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  var onConnected = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n              \"connected\": true\n            }));\n            stompClient.subscribe('/chatroom/public', onMessageReceived);\n            _context.next = 4;\n            return fetchUsers();\n          case 4:\n            console.log(clients);\n            console.log(admins);\n            if (role === 'ADMIN' && clients.includes(userData.username)) {\n              console.log(\"ha?\");\n              stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n              userJoin();\n            }\n            if (role === 'CLIENT' && admins.includes(userData.username)) {\n              stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n              userJoin();\n            }\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function onConnected() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchUsers = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var token, response, responseData;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            token = localStorage.getItem('token');\n            role = localStorage.getItem('role');\n            if (!(role === 'ADMIN')) {\n              _context2.next = 9;\n              break;\n            }\n            _context2.next = 6;\n            return fetch('http://localhost:8080/user/chat-clients', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n          case 6:\n            response = _context2.sent;\n            _context2.next = 12;\n            break;\n          case 9:\n            _context2.next = 11;\n            return fetch('http://localhost:8080/user/chat-admins', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n          case 11:\n            response = _context2.sent;\n          case 12:\n            if (response.ok) {\n              _context2.next = 15;\n              break;\n            }\n            console.error('Failed to fetch users for chat');\n            return _context2.abrupt(\"return\", []);\n          case 15:\n            _context2.next = 17;\n            return response.json();\n          case 17:\n            responseData = _context2.sent;\n            // Parse response body to JSON\n\n            if (role === 'ADMIN') {\n              clients = responseData; // Set clients with the parsed data\n            } else {\n              admins = responseData; // Set admins with the parsed data\n            }\n            return _context2.abrupt(\"return\", responseData);\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Error fetching users:', _context2.t0);\n            return _context2.abrupt(\"return\", []);\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 22]]);\n    }));\n    return function fetchUsers() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var userJoin = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var usersList;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetchUsers();\n          case 2:\n            usersList = _context3.sent;\n            usersList.forEach(function (currentUser, index) {\n              console.log(\"Current user \".concat(index + 1, \":\"), currentUser);\n              var chatMessage = {\n                senderName: currentUser,\n                status: \"JOIN\"\n              };\n              stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n            });\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function userJoin() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var onMessageReceived = function onMessageReceived(payload) {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n        }\n        break;\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats(_toConsumableArray(publicChats));\n        break;\n    }\n  };\n  var onPrivateMessage = function onPrivateMessage(payload) {\n    var payloadData = JSON.parse(payload.body);\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      var list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n  var onError = function onError(err) {\n    console.log(err);\n  };\n  var handleMessage = function handleMessage(event) {\n    var value = event.target.value;\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      \"message\": value\n    }));\n  };\n  var sendValue = function sendValue() {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n      setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"message\": \"\"\n      }));\n    }\n  };\n  var sendPrivateValue = function sendPrivateValue() {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n      setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"message\": \"\"\n      }));\n    }\n  };\n  var getLoggedInUsername = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var response, username;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return fetch('http://localhost:8080/auth/username', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n              }\n            });\n          case 3:\n            response = _context4.sent;\n            if (response.ok) {\n              _context4.next = 6;\n              break;\n            }\n            throw new Error('Network response was not ok.');\n          case 6:\n            _context4.next = 8;\n            return response.text();\n          case 8:\n            username = _context4.sent;\n            console.info(\"Logged-in Username:\" + username);\n            return _context4.abrupt(\"return\", username);\n          case 13:\n            _context4.prev = 13;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error('Error fetching logged-in username:', _context4.t0);\n            throw _context4.t0;\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 13]]);\n    }));\n    return function getLoggedInUsername() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleUsername = function handleUsername(event) {\n    getLoggedInUsername().then(function (loggedUser) {\n      return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"username\": loggedUser\n      }));\n    });\n    ;\n  };\n  var registerUser = function registerUser() {\n    connect();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: function onClick() {\n              setTab(\"CHATROOM\");\n            },\n            className: \"member \".concat(tab === \"CHATROOM\" && \"active\"),\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, _this), _toConsumableArray(privateChats.keys()).map(function (name, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: function onClick() {\n                setTab(name);\n              },\n              className: \"member \".concat(tab === name && \"active\"),\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, _this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map(function (chat, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"message \".concat(chat.senderName === userData.username && \"self\"),\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 79\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, _this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 79\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 42\n      }, _this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: _toConsumableArray(privateChats.get(tab)).map(function (chat, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"message \".concat(chat.senderName === userData.username && \"self\"),\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 79\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, _this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 79\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 42\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '20px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginRight: '20px',\n          marginTop: '20px'\n        },\n        children: [\"You are logged in as: \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"Connect to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, _this);\n};\n_s(ChatWindow, \"uzNbajZqZbJ0KB/5a17v1lGxBqU=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatWindow","_s","_useState","Map","_useState2","_slicedToArray","privateChats","setPrivateChats","_useState3","_useState4","publicChats","setPublicChats","_useState5","_useState6","tab","setTab","_useState7","username","receivername","connected","message","_useState8","userData","setUserData","_ref","clients","admins","role","headers","Authorization","localStorage","getItem","handleUsername","connect","Sock","onConnected","onError","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","_objectSpread","subscribe","onMessageReceived","fetchUsers","console","log","includes","onPrivateMessage","userJoin","stop","apply","arguments","_ref3","_callee2","token","response","responseData","_callee2$","_context2","fetch","method","sent","ok","error","abrupt","json","t0","_ref4","_callee3","usersList","_callee3$","_context3","forEach","currentUser","index","concat","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","get","set","push","_toConsumableArray","list","err","handleMessage","event","value","target","sendValue","sendPrivateValue","receiverName","getLoggedInUsername","_ref5","_callee4","_callee4$","_context4","Error","text","info","then","loggedUser","registerUser","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_this","keys","map","name","chat","type","placeholder","onChange","style","color","fontSize","fontWeight","textAlign","marginRight","marginTop","_c","$RefreshReg$"],"sources":["/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {over} from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport './chat.css';\n\nvar stompClient =null;\nconst ChatWindow = () => {\n    const [privateChats, setPrivateChats] = useState(new Map());\n    const [publicChats, setPublicChats] = useState([]);\n    const [tab,setTab] =useState(\"CHATROOM\");\n    const [userData, setUserData] = useState({\n        username: '',\n        receivername: '',\n        connected: false,\n        message: ''\n    });\n    let [clients, admins] = [];\n    let role;\n    let headers = {\n        Authorization:  localStorage.getItem('token'),\n    };\n\n    useEffect(() => {\n        handleUsername();\n    }, []);\n\n    const connect =()=>{\n        let Sock = new SockJS('http://localhost:8083/ws');\n        stompClient = over(Sock);\n        stompClient.connect({},onConnected, onError);\n    }\n\n    const onConnected = async () => {\n        setUserData({...userData, \"connected\": true});\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\n        await fetchUsers();\n        console.log(clients);\n        console.log(admins);\n        if (role === 'ADMIN' && clients.includes(userData.username)) {\n            console.log(\"ha?\")\n            stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n            userJoin();\n        }\n\n        if (role === 'CLIENT' && admins.includes(userData.username)) {\n            stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n            userJoin();\n        }\n    }\n    const fetchUsers = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            role = localStorage.getItem('role');\n            let response;\n\n            if (role === 'ADMIN') {\n                response = await fetch('http://localhost:8080/user/chat-clients', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': 'Bearer ' + token,\n                    },\n                });\n            } else {\n                response = await fetch('http://localhost:8080/user/chat-admins', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': 'Bearer ' + token,\n                    },\n                });\n            }\n\n            if (!response.ok) {\n                console.error('Failed to fetch users for chat');\n                return [];\n            }\n\n            const responseData = await response.json(); // Parse response body to JSON\n\n            if (role === 'ADMIN') {\n                clients = responseData; // Set clients with the parsed data\n            } else {\n                admins = responseData; // Set admins with the parsed data\n            }\n\n            return responseData; // Return the parsed data\n        } catch (error) {\n            console.error('Error fetching users:', error);\n            return [];\n        }\n    };\n\n\n    const userJoin= async ()=>{\n            const usersList = await fetchUsers();\n            usersList.forEach((currentUser, index) => {\n                console.log(`Current user ${index + 1}:`, currentUser);\n                const chatMessage = {\n                    senderName: currentUser,\n                    status: \"JOIN\"\n                };\n                stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n            });\n\n    }\n\n\n    const onMessageReceived = (payload)=>{\n        const payloadData = JSON.parse(payload.body);\n\n        switch(payloadData.status){\n            case \"JOIN\":\n                if(!privateChats.get(payloadData.senderName)){\n                    privateChats.set(payloadData.senderName,[]);\n                    setPrivateChats(new Map(privateChats));\n                }\n                break;\n            case \"MESSAGE\":\n                publicChats.push(payloadData);\n                setPublicChats([...publicChats]);\n                break;\n        }\n    }\n\n    const onPrivateMessage = (payload)=>{\n        const payloadData = JSON.parse(payload.body);\n        if(privateChats.get(payloadData.senderName)){\n            privateChats.get(payloadData.senderName).push(payloadData);\n            setPrivateChats(new Map(privateChats));\n        }else{\n            let list =[];\n            list.push(payloadData);\n            privateChats.set(payloadData.senderName,list);\n            setPrivateChats(new Map(privateChats));\n        }\n    }\n\n    const onError = (err) => {\n        console.log(err);\n\n    }\n\n    const handleMessage =(event)=>{\n        const {value}=event.target;\n        setUserData({...userData,\"message\": value});\n    }\n    const sendValue=()=>{\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                message: userData.message,\n                status: \"MESSAGE\"\n            };\n            console.log(chatMessage);\n            stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n            setUserData({...userData,\"message\": \"\"});\n        }\n    }\n\n    const sendPrivateValue=()=>{\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                receiverName: tab,\n                message: userData.message,\n                status: \"MESSAGE\"\n            };\n\n            if(userData.username !== tab){\n                privateChats.get(tab).push(chatMessage);\n                setPrivateChats(new Map(privateChats));\n            }\n            stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n            setUserData({...userData,\"message\": \"\"});\n        }\n    }\n    const getLoggedInUsername = async () => {\n        try {\n            const response = await fetch('http://localhost:8080/auth/username', {\n                method: 'GET',\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok.');\n            }\n\n            const username = await response.text();\n            console.info(\"Logged-in Username:\" + username);\n            return username;\n        } catch (error) {\n            console.error('Error fetching logged-in username:', error);\n            throw error;\n        }\n    };\n\n    const handleUsername=(event)=>{\n        getLoggedInUsername().then((loggedUser) => setUserData({...userData,\"username\": loggedUser}));;\n    }\n\n    const registerUser=()=>{\n        connect();\n    }\n\n\n\n\n    return (\n        <div className=\"container\">\n            {userData.connected?\n                <div className=\"chat-box\">\n                    <div className=\"member-list\">\n                        <ul>\n                            <li onClick={()=>{setTab(\"CHATROOM\")}} className={`member ${tab===\"CHATROOM\" && \"active\"}`}>Chatroom</li>\n                            {[...privateChats.keys()].map((name,index)=>(\n                                <li onClick={()=>{setTab(name)}} className={`member ${tab===name && \"active\"}`} key={index}>{name}</li>\n                            ))}\n                        </ul>\n                    </div>\n                    {tab===\"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages\">\n                            {publicChats.map((chat,index)=>(\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\n                                    <div className=\"message-data\">{chat.message}</div>\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\n                                </li>\n                            ))}\n                        </ul>\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\n                            <button type=\"button\" className=\"send-button\" onClick={sendValue}>send</button>\n                        </div>\n                    </div>}\n                    {tab!==\"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages\">\n                            {[...privateChats.get(tab)].map((chat,index)=>(\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\n                                    <div className=\"message-data\">{chat.message}</div>\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\n                                </li>\n                            ))}\n                        </ul>\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\n                            <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>send</button>\n                        </div>\n                    </div>}\n                </div>\n                :\n                <div className=\"register\">\n                    <p style={{ color: 'white', fontSize: '20px', fontWeight: 'bold', textAlign: 'center' , marginRight: '20px', marginTop: '20px'}}>\n                        You are logged in as: {userData.username}\n                    </p>\n                    <button type=\"button\" onClick={registerUser}>\n                    Connect to chat\n                    </button>\n                </div>}\n        </div>\n    )\n}\n\nexport default ChatWindow"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,IAAI,QAAO,SAAS;AAC5B,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,IAAIC,WAAW,GAAE,IAAI;AACrB,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAAAC,EAAA;EACrB,IAAAC,SAAA,GAAwCR,QAAQ,CAAC,IAAIS,GAAG,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAApDI,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAsCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAoBlB,QAAQ,CAAC,UAAU,CAAC;IAAAmB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjCE,GAAG,GAAAD,UAAA;IAACE,MAAM,GAAAF,UAAA;EACjB,IAAAG,UAAA,GAAgCtB,QAAQ,CAAC;MACrCuB,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE;IACb,CAAC,CAAC;IAAAC,UAAA,GAAAhB,cAAA,CAAAW,UAAA;IALKM,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAM5B,IAAAG,IAAA,GAAwB,EAAE;IAArBC,OAAO,GAAAD,IAAA;IAAEE,MAAM,GAAAF,IAAA;EACpB,IAAIG,IAAI;EACR,IAAIC,OAAO,GAAG;IACVC,aAAa,EAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;EAChD,CAAC;EAEDtC,SAAS,CAAC,YAAM;IACZuC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,OAAO,GAAE,SAATA,OAAOA,CAAA,EAAM;IACf,IAAIC,IAAI,GAAG,IAAItC,MAAM,CAAC,0BAA0B,CAAC;IACjDG,WAAW,GAAGJ,IAAI,CAACuC,IAAI,CAAC;IACxBnC,WAAW,CAACkC,OAAO,CAAC,CAAC,CAAC,EAACE,WAAW,EAAEC,OAAO,CAAC;EAChD,CAAC;EAED,IAAMD,WAAW;IAAA,IAAAE,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;MAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAChBvB,WAAW,CAAAwB,aAAA,CAAAA,aAAA,KAAKzB,QAAQ;cAAE,WAAW,EAAE;YAAI,EAAC,CAAC;YAC7CvB,WAAW,CAACiD,SAAS,CAAC,kBAAkB,EAAEC,iBAAiB,CAAC;YAACL,QAAA,CAAAE,IAAA;YAAA,OACvDI,UAAU,CAAC,CAAC;UAAA;YAClBC,OAAO,CAACC,GAAG,CAAC3B,OAAO,CAAC;YACpB0B,OAAO,CAACC,GAAG,CAAC1B,MAAM,CAAC;YACnB,IAAIC,IAAI,KAAK,OAAO,IAAIF,OAAO,CAAC4B,QAAQ,CAAC/B,QAAQ,CAACL,QAAQ,CAAC,EAAE;cACzDkC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;cAClBrD,WAAW,CAACiD,SAAS,CAAC,QAAQ,GAAG1B,QAAQ,CAACL,QAAQ,GAAG,UAAU,EAAEqC,gBAAgB,CAAC;cAClFC,QAAQ,CAAC,CAAC;YACd;YAEA,IAAI5B,IAAI,KAAK,QAAQ,IAAID,MAAM,CAAC2B,QAAQ,CAAC/B,QAAQ,CAACL,QAAQ,CAAC,EAAE;cACzDlB,WAAW,CAACiD,SAAS,CAAC,QAAQ,GAAG1B,QAAQ,CAACL,QAAQ,GAAG,UAAU,EAAEqC,gBAAgB,CAAC;cAClFC,QAAQ,CAAC,CAAC;YACd;UAAC;UAAA;YAAA,OAAAX,QAAA,CAAAY,IAAA;QAAA;MAAA,GAAAf,OAAA;IAAA,CACJ;IAAA,gBAhBKN,WAAWA,CAAA;MAAA,OAAAE,KAAA,CAAAoB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgBhB;EACD,IAAMR,UAAU;IAAA,IAAAS,KAAA,GAAArB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAoB,SAAA;MAAA,IAAAC,KAAA,EAAAC,QAAA,EAAAC,YAAA;MAAA,OAAAxB,mBAAA,GAAAG,IAAA,UAAAsB,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;UAAA;YAAAmB,SAAA,CAAApB,IAAA;YAELgB,KAAK,GAAG/B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;YAC3CJ,IAAI,GAAGG,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;YAAC,MAGhCJ,IAAI,KAAK,OAAO;cAAAsC,SAAA,CAAAnB,IAAA;cAAA;YAAA;YAAAmB,SAAA,CAAAnB,IAAA;YAAA,OACCoB,KAAK,CAAC,yCAAyC,EAAE;cAC9DC,MAAM,EAAE,KAAK;cACbvC,OAAO,EAAE;gBACL,eAAe,EAAE,SAAS,GAAGiC;cACjC;YACJ,CAAC,CAAC;UAAA;YALFC,QAAQ,GAAAG,SAAA,CAAAG,IAAA;YAAAH,SAAA,CAAAnB,IAAA;YAAA;UAAA;YAAAmB,SAAA,CAAAnB,IAAA;YAAA,OAOSoB,KAAK,CAAC,wCAAwC,EAAE;cAC7DC,MAAM,EAAE,KAAK;cACbvC,OAAO,EAAE;gBACL,eAAe,EAAE,SAAS,GAAGiC;cACjC;YACJ,CAAC,CAAC;UAAA;YALFC,QAAQ,GAAAG,SAAA,CAAAG,IAAA;UAAA;YAAA,IAQPN,QAAQ,CAACO,EAAE;cAAAJ,SAAA,CAAAnB,IAAA;cAAA;YAAA;YACZK,OAAO,CAACmB,KAAK,CAAC,gCAAgC,CAAC;YAAC,OAAAL,SAAA,CAAAM,MAAA,WACzC,EAAE;UAAA;YAAAN,SAAA,CAAAnB,IAAA;YAAA,OAGcgB,QAAQ,CAACU,IAAI,CAAC,CAAC;UAAA;YAApCT,YAAY,GAAAE,SAAA,CAAAG,IAAA;YAA0B;;YAE5C,IAAIzC,IAAI,KAAK,OAAO,EAAE;cAClBF,OAAO,GAAGsC,YAAY,CAAC,CAAC;YAC5B,CAAC,MAAM;cACHrC,MAAM,GAAGqC,YAAY,CAAC,CAAC;YAC3B;YAAC,OAAAE,SAAA,CAAAM,MAAA,WAEMR,YAAY;UAAA;YAAAE,SAAA,CAAApB,IAAA;YAAAoB,SAAA,CAAAQ,EAAA,GAAAR,SAAA;YAEnBd,OAAO,CAACmB,KAAK,CAAC,uBAAuB,EAAAL,SAAA,CAAAQ,EAAO,CAAC;YAAC,OAAAR,SAAA,CAAAM,MAAA,WACvC,EAAE;UAAA;UAAA;YAAA,OAAAN,SAAA,CAAAT,IAAA;QAAA;MAAA,GAAAI,QAAA;IAAA,CAEhB;IAAA,gBAxCKV,UAAUA,CAAA;MAAA,OAAAS,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAwCf;EAGD,IAAMH,QAAQ;IAAA,IAAAmB,KAAA,GAAApC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAmC,SAAA;MAAA,IAAAC,SAAA;MAAA,OAAArC,mBAAA,GAAAG,IAAA,UAAAmC,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAjC,IAAA,GAAAiC,SAAA,CAAAhC,IAAA;UAAA;YAAAgC,SAAA,CAAAhC,IAAA;YAAA,OACgBI,UAAU,CAAC,CAAC;UAAA;YAA9B0B,SAAS,GAAAE,SAAA,CAAAV,IAAA;YACfQ,SAAS,CAACG,OAAO,CAAC,UAACC,WAAW,EAAEC,KAAK,EAAK;cACtC9B,OAAO,CAACC,GAAG,iBAAA8B,MAAA,CAAiBD,KAAK,GAAG,CAAC,QAAKD,WAAW,CAAC;cACtD,IAAMG,WAAW,GAAG;gBAChBC,UAAU,EAAEJ,WAAW;gBACvBK,MAAM,EAAE;cACZ,CAAC;cACDtF,WAAW,CAACuF,IAAI,CAAC,cAAc,EAAE1D,OAAO,EAAE2D,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC,CAAC;YAC1E,CAAC,CAAC;UAAC;UAAA;YAAA,OAAAL,SAAA,CAAAtB,IAAA;QAAA;MAAA,GAAAmB,QAAA;IAAA,CAEV;IAAA,gBAXKpB,QAAQA,CAAA;MAAA,OAAAmB,KAAA,CAAAjB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAWb;EAGD,IAAMT,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIwC,OAAO,EAAG;IACjC,IAAMC,WAAW,GAAGH,IAAI,CAACI,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC;IAE5C,QAAOF,WAAW,CAACL,MAAM;MACrB,KAAK,MAAM;QACP,IAAG,CAAC/E,YAAY,CAACuF,GAAG,CAACH,WAAW,CAACN,UAAU,CAAC,EAAC;UACzC9E,YAAY,CAACwF,GAAG,CAACJ,WAAW,CAACN,UAAU,EAAC,EAAE,CAAC;UAC3C7E,eAAe,CAAC,IAAIJ,GAAG,CAACG,YAAY,CAAC,CAAC;QAC1C;QACA;MACJ,KAAK,SAAS;QACVI,WAAW,CAACqF,IAAI,CAACL,WAAW,CAAC;QAC7B/E,cAAc,CAAAqF,kBAAA,CAAKtF,WAAW,CAAC,CAAC;QAChC;IACR;EACJ,CAAC;EAED,IAAM4C,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAImC,OAAO,EAAG;IAChC,IAAMC,WAAW,GAAGH,IAAI,CAACI,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC;IAC5C,IAAGtF,YAAY,CAACuF,GAAG,CAACH,WAAW,CAACN,UAAU,CAAC,EAAC;MACxC9E,YAAY,CAACuF,GAAG,CAACH,WAAW,CAACN,UAAU,CAAC,CAACW,IAAI,CAACL,WAAW,CAAC;MAC1DnF,eAAe,CAAC,IAAIJ,GAAG,CAACG,YAAY,CAAC,CAAC;IAC1C,CAAC,MAAI;MACD,IAAI2F,IAAI,GAAE,EAAE;MACZA,IAAI,CAACF,IAAI,CAACL,WAAW,CAAC;MACtBpF,YAAY,CAACwF,GAAG,CAACJ,WAAW,CAACN,UAAU,EAACa,IAAI,CAAC;MAC7C1F,eAAe,CAAC,IAAIJ,GAAG,CAACG,YAAY,CAAC,CAAC;IAC1C;EACJ,CAAC;EAED,IAAM8B,OAAO,GAAG,SAAVA,OAAOA,CAAI8D,GAAG,EAAK;IACrB/C,OAAO,CAACC,GAAG,CAAC8C,GAAG,CAAC;EAEpB,CAAC;EAED,IAAMC,aAAa,GAAE,SAAfA,aAAaA,CAAGC,KAAK,EAAG;IAC1B,IAAOC,KAAK,GAAED,KAAK,CAACE,MAAM,CAAnBD,KAAK;IACZ9E,WAAW,CAAAwB,aAAA,CAAAA,aAAA,KAAKzB,QAAQ;MAAC,SAAS,EAAE+E;IAAK,EAAC,CAAC;EAC/C,CAAC;EACD,IAAME,SAAS,GAAC,SAAVA,SAASA,CAAA,EAAK;IAChB,IAAIxG,WAAW,EAAE;MACb,IAAMoF,WAAW,GAAG;QAChBC,UAAU,EAAE9D,QAAQ,CAACL,QAAQ;QAC7BG,OAAO,EAAEE,QAAQ,CAACF,OAAO;QACzBiE,MAAM,EAAE;MACZ,CAAC;MACDlC,OAAO,CAACC,GAAG,CAAC+B,WAAW,CAAC;MACxBpF,WAAW,CAACuF,IAAI,CAAC,cAAc,EAAE1D,OAAO,EAAE2D,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC,CAAC;MACtE5D,WAAW,CAAAwB,aAAA,CAAAA,aAAA,KAAKzB,QAAQ;QAAC,SAAS,EAAE;MAAE,EAAC,CAAC;IAC5C;EACJ,CAAC;EAED,IAAMkF,gBAAgB,GAAC,SAAjBA,gBAAgBA,CAAA,EAAK;IACvB,IAAIzG,WAAW,EAAE;MACb,IAAMoF,WAAW,GAAG;QAChBC,UAAU,EAAE9D,QAAQ,CAACL,QAAQ;QAC7BwF,YAAY,EAAE3F,GAAG;QACjBM,OAAO,EAAEE,QAAQ,CAACF,OAAO;QACzBiE,MAAM,EAAE;MACZ,CAAC;MAED,IAAG/D,QAAQ,CAACL,QAAQ,KAAKH,GAAG,EAAC;QACzBR,YAAY,CAACuF,GAAG,CAAC/E,GAAG,CAAC,CAACiF,IAAI,CAACZ,WAAW,CAAC;QACvC5E,eAAe,CAAC,IAAIJ,GAAG,CAACG,YAAY,CAAC,CAAC;MAC1C;MACAP,WAAW,CAACuF,IAAI,CAAC,sBAAsB,EAAE1D,OAAO,EAAE2D,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC,CAAC;MAC9E5D,WAAW,CAAAwB,aAAA,CAAAA,aAAA,KAAKzB,QAAQ;QAAC,SAAS,EAAE;MAAE,EAAC,CAAC;IAC5C;EACJ,CAAC;EACD,IAAMoF,mBAAmB;IAAA,IAAAC,KAAA,GAAArE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAoE,SAAA;MAAA,IAAA9C,QAAA,EAAA7C,QAAA;MAAA,OAAAsB,mBAAA,GAAAG,IAAA,UAAAmE,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAjE,IAAA,GAAAiE,SAAA,CAAAhE,IAAA;UAAA;YAAAgE,SAAA,CAAAjE,IAAA;YAAAiE,SAAA,CAAAhE,IAAA;YAAA,OAEGoB,KAAK,CAAC,qCAAqC,EAAE;cAChEC,MAAM,EAAE,KAAK;cACbvC,OAAO,EAAE;gBACL,eAAe,EAAE,SAAS,GAAGE,YAAY,CAACC,OAAO,CAAC,OAAO;cAC7D;YACJ,CAAC,CAAC;UAAA;YALI+B,QAAQ,GAAAgD,SAAA,CAAA1C,IAAA;YAAA,IAOTN,QAAQ,CAACO,EAAE;cAAAyC,SAAA,CAAAhE,IAAA;cAAA;YAAA;YAAA,MACN,IAAIiE,KAAK,CAAC,8BAA8B,CAAC;UAAA;YAAAD,SAAA,CAAAhE,IAAA;YAAA,OAG5BgB,QAAQ,CAACkD,IAAI,CAAC,CAAC;UAAA;YAAhC/F,QAAQ,GAAA6F,SAAA,CAAA1C,IAAA;YACdjB,OAAO,CAAC8D,IAAI,CAAC,qBAAqB,GAAGhG,QAAQ,CAAC;YAAC,OAAA6F,SAAA,CAAAvC,MAAA,WACxCtD,QAAQ;UAAA;YAAA6F,SAAA,CAAAjE,IAAA;YAAAiE,SAAA,CAAArC,EAAA,GAAAqC,SAAA;YAEf3D,OAAO,CAACmB,KAAK,CAAC,oCAAoC,EAAAwC,SAAA,CAAArC,EAAO,CAAC;YAAC,MAAAqC,SAAA,CAAArC,EAAA;UAAA;UAAA;YAAA,OAAAqC,SAAA,CAAAtD,IAAA;QAAA;MAAA,GAAAoD,QAAA;IAAA,CAGlE;IAAA,gBApBKF,mBAAmBA,CAAA;MAAA,OAAAC,KAAA,CAAAlD,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoBxB;EAED,IAAM1B,cAAc,GAAC,SAAfA,cAAcA,CAAEoE,KAAK,EAAG;IAC1BM,mBAAmB,CAAC,CAAC,CAACQ,IAAI,CAAC,UAACC,UAAU;MAAA,OAAK5F,WAAW,CAAAwB,aAAA,CAAAA,aAAA,KAAKzB,QAAQ;QAAC,UAAU,EAAE6F;MAAU,EAAC,CAAC;IAAA,EAAC;IAAC;EAClG,CAAC;EAED,IAAMC,YAAY,GAAC,SAAbA,YAAYA,CAAA,EAAK;IACnBnF,OAAO,CAAC,CAAC;EACb,CAAC;EAKD,oBACInC,OAAA;IAAKuH,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBhG,QAAQ,CAACH,SAAS,gBACfrB,OAAA;MAAKuH,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBxH,OAAA;QAAKuH,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxBxH,OAAA;UAAAwH,QAAA,gBACIxH,OAAA;YAAIyH,OAAO,EAAE,SAAAA,QAAA,EAAI;cAACxG,MAAM,CAAC,UAAU,CAAC;YAAA,CAAE;YAACsG,SAAS,YAAAnC,MAAA,CAAYpE,GAAG,KAAG,UAAU,IAAI,QAAQ,CAAG;YAAAwG,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAI,CAAC,EACxG5B,kBAAA,CAAI1F,YAAY,CAACuH,IAAI,CAAC,CAAC,EAAEC,GAAG,CAAC,UAACC,IAAI,EAAC9C,KAAK;YAAA,oBACrCnF,OAAA;cAAIyH,OAAO,EAAE,SAAAA,QAAA,EAAI;gBAACxG,MAAM,CAACgH,IAAI,CAAC;cAAA,CAAE;cAACV,SAAS,YAAAnC,MAAA,CAAYpE,GAAG,KAAGiH,IAAI,IAAI,QAAQ,CAAG;cAAAT,QAAA,EAAcS;YAAI,GAAZ9C,KAAK;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAAY,CAAC;UAAA,CAC1G,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACF;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACJ,CAAC,EACL9G,GAAG,KAAG,UAAU,iBAAIhB,OAAA;QAAKuH,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC9CxH,OAAA;UAAIuH,SAAS,EAAC,eAAe;UAAAC,QAAA,EACxB5G,WAAW,CAACoH,GAAG,CAAC,UAACE,IAAI,EAAC/C,KAAK;YAAA,oBACxBnF,OAAA;cAAIuH,SAAS,aAAAnC,MAAA,CAAa8C,IAAI,CAAC5C,UAAU,KAAK9D,QAAQ,CAACL,QAAQ,IAAI,MAAM,CAAG;cAAAqG,QAAA,GACvEU,IAAI,CAAC5C,UAAU,KAAK9D,QAAQ,CAACL,QAAQ,iBAAInB,OAAA;gBAAKuH,SAAS,EAAC,QAAQ;gBAAAC,QAAA,EAAEU,IAAI,CAAC5C;cAAU;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,GAAAC,KAAM,CAAC,eACzF9H,OAAA;gBAAKuH,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEU,IAAI,CAAC5G;cAAO;gBAAAoG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,GAAAC,KAAM,CAAC,EACjDI,IAAI,CAAC5C,UAAU,KAAK9D,QAAQ,CAACL,QAAQ,iBAAInB,OAAA;gBAAKuH,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEU,IAAI,CAAC5C;cAAU;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,GAAAC,KAAM,CAAC;YAAA,GAHhB3C,KAAK;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAInF,CAAC;UAAA,CACR;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACF,CAAC,eAEL9H,OAAA;UAAKuH,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBxH,OAAA;YAAOmI,IAAI,EAAC,MAAM;YAACZ,SAAS,EAAC,eAAe;YAACa,WAAW,EAAC,mBAAmB;YAAC7B,KAAK,EAAE/E,QAAQ,CAACF,OAAQ;YAAC+G,QAAQ,EAAEhC;UAAc;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAE,CAAC,eACjI9H,OAAA;YAAQmI,IAAI,EAAC,QAAQ;YAACZ,SAAS,EAAC,aAAa;YAACE,OAAO,EAAEhB,SAAU;YAAAe,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAQ,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAC9E,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACL,CAAC,EACL9G,GAAG,KAAG,UAAU,iBAAIhB,OAAA;QAAKuH,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC9CxH,OAAA;UAAIuH,SAAS,EAAC,eAAe;UAAAC,QAAA,EACxBtB,kBAAA,CAAI1F,YAAY,CAACuF,GAAG,CAAC/E,GAAG,CAAC,EAAEgH,GAAG,CAAC,UAACE,IAAI,EAAC/C,KAAK;YAAA,oBACvCnF,OAAA;cAAIuH,SAAS,aAAAnC,MAAA,CAAa8C,IAAI,CAAC5C,UAAU,KAAK9D,QAAQ,CAACL,QAAQ,IAAI,MAAM,CAAG;cAAAqG,QAAA,GACvEU,IAAI,CAAC5C,UAAU,KAAK9D,QAAQ,CAACL,QAAQ,iBAAInB,OAAA;gBAAKuH,SAAS,EAAC,QAAQ;gBAAAC,QAAA,EAAEU,IAAI,CAAC5C;cAAU;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,GAAAC,KAAM,CAAC,eACzF9H,OAAA;gBAAKuH,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEU,IAAI,CAAC5G;cAAO;gBAAAoG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,GAAAC,KAAM,CAAC,EACjDI,IAAI,CAAC5C,UAAU,KAAK9D,QAAQ,CAACL,QAAQ,iBAAInB,OAAA;gBAAKuH,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEU,IAAI,CAAC5C;cAAU;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,GAAAC,KAAM,CAAC;YAAA,GAHhB3C,KAAK;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAInF,CAAC;UAAA,CACR;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACF,CAAC,eAEL9H,OAAA;UAAKuH,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBxH,OAAA;YAAOmI,IAAI,EAAC,MAAM;YAACZ,SAAS,EAAC,eAAe;YAACa,WAAW,EAAC,mBAAmB;YAAC7B,KAAK,EAAE/E,QAAQ,CAACF,OAAQ;YAAC+G,QAAQ,EAAEhC;UAAc;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAE,CAAC,eACjI9H,OAAA;YAAQmI,IAAI,EAAC,QAAQ;YAACZ,SAAS,EAAC,aAAa;YAACE,OAAO,EAAEf,gBAAiB;YAAAc,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAQ,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACrF,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACL,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACL,CAAC,gBAEN9H,OAAA;MAAKuH,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBxH,OAAA;QAAGsI,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,QAAQ,EAAE,MAAM;UAAEC,UAAU,EAAE,MAAM;UAAEC,SAAS,EAAE,QAAQ;UAAGC,WAAW,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAM,CAAE;QAAApB,QAAA,GAAC,wBACvG,EAAChG,QAAQ,CAACL,QAAQ;MAAA;QAAAuG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACzC,CAAC,eACJ9H,OAAA;QAAQmI,IAAI,EAAC,QAAQ;QAACV,OAAO,EAAEH,YAAa;QAAAE,QAAA,EAAC;MAE7C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAQ,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACR;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACT,CAAC;AAEd,CAAC;AAAA3H,EAAA,CAlQKD,UAAU;AAAA2I,EAAA,GAAV3I,UAAU;AAoQhB,eAAeA,UAAU;AAAA,IAAA2I,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}