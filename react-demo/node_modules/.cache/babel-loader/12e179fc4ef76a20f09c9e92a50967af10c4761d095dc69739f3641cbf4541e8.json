{"ast":null,"code":"import _toConsumableArray from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nvar ChatWindow = function ChatWindow() {\n  _s();\n  var _useState = useState(new Map()),\n    _useState2 = _slicedToArray(_useState, 2),\n    privateChats = _useState2[0],\n    setPrivateChats = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    publicChats = _useState4[0],\n    setPublicChats = _useState4[1];\n  var _useState5 = useState(\"CHATROOM\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tab = _useState6[0],\n    setTab = _useState6[1];\n  var _useState7 = useState({\n      username: '',\n      receivername: '',\n      connected: false,\n      message: ''\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userData = _useState8[0],\n    setUserData = _useState8[1];\n  var r = 0;\n  var headers = {\n    Authorization: localStorage.getItem('token')\n  };\n  useEffect(function () {\n    handleUsername();\n    var fetchUserRole = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var role;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                role = localStorage.getItem('role');\n                if (role === 'ADMIN') {\n                  handleAdmin();\n                } else {\n                  handleClient();\n                }\n              } catch (error) {\n                console.error('Error fetching user role:', error);\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchUserRole() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchUserRole();\n  }, []);\n  var handleAdmin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var username;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return getLoggedInUsername();\n          case 3:\n            username = _context2.sent;\n            setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n              'username': username\n            }));\n            connectAdmin();\n            _context2.next = 11;\n            break;\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Error handling admin:', _context2.t0);\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n    return function handleAdmin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleClient = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var username;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return getLoggedInUsername();\n          case 3:\n            username = _context3.sent;\n            setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n              'username': username\n            }));\n            connectClient();\n            _context3.next = 11;\n            break;\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error('Error handling client:', _context3.t0);\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n    return function handleClient() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var connectAdmin = function connectAdmin() {\n    var Sock = new SockJS('http://localhost:8083/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnectedAdmin, onError);\n  };\n  var connectClient = function connectClient() {\n    var Sock = new SockJS('http://localhost:8083/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnectedClient, onError);\n  };\n  var onConnectedAdmin = function onConnectedAdmin() {\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      'connected': true\n    }));\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    userJoin();\n  };\n  var onConnectedClient = function onConnectedClient() {\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      'connected': true\n    }));\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    userJoin();\n  };\n  var connect = function connect() {\n    var Sock = new SockJS('http://localhost:8083/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  var onConnected = function onConnected() {\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      \"connected\": true\n    }));\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    userJoin();\n  };\n  var fetchUsers = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var token, role, response;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            token = localStorage.getItem('token');\n            role = localStorage.getItem('role');\n            if (!(role === 'ADMIN')) {\n              _context4.next = 9;\n              break;\n            }\n            _context4.next = 6;\n            return fetch('http://localhost:8080/user/chat-clients', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n          case 6:\n            response = _context4.sent;\n            _context4.next = 12;\n            break;\n          case 9:\n            _context4.next = 11;\n            return fetch('http://localhost:8080/user/chat-admins', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n          case 11:\n            response = _context4.sent;\n          case 12:\n            if (response.ok) {\n              _context4.next = 15;\n              break;\n            }\n            console.error('Failed to fetch users for chat');\n            return _context4.abrupt(\"return\", []);\n          case 15:\n            _context4.next = 17;\n            return response.json();\n          case 17:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 20:\n            _context4.prev = 20;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error('Error fetching  users:', _context4.t0);\n            return _context4.abrupt(\"return\", []);\n          case 24:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 20]]);\n    }));\n    return function fetchUsers() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var userJoin = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var usersList;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetchUsers();\n          case 2:\n            usersList = _context5.sent;\n            usersList.forEach(function (currentUser, index) {\n              console.log(\"Current user \".concat(index + 1, \":\"), currentUser);\n              var chatMessage = {\n                senderName: currentUser,\n                status: \"JOIN\"\n              };\n              stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n            });\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function userJoin() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var onMessageReceived = function onMessageReceived(payload) {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n        }\n        break;\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats(_toConsumableArray(publicChats));\n        break;\n    }\n  };\n  var onPrivateMessage = function onPrivateMessage(payload) {\n    var payloadData = JSON.parse(payload.body);\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      var list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n  var onError = function onError(err) {\n    console.log(err);\n  };\n  var handleMessage = function handleMessage(event) {\n    var value = event.target.value;\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      \"message\": value\n    }));\n  };\n  var sendValue = function sendValue() {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n      setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"message\": \"\"\n      }));\n    }\n  };\n  var sendPrivateValue = function sendPrivateValue() {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n      setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"message\": \"\"\n      }));\n    }\n  };\n  var getLoggedInUsername = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var response, username;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return fetch('http://localhost:8080/auth/username', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n              }\n            });\n          case 3:\n            response = _context6.sent;\n            if (response.ok) {\n              _context6.next = 6;\n              break;\n            }\n            throw new Error('Network response was not ok.');\n          case 6:\n            _context6.next = 8;\n            return response.text();\n          case 8:\n            username = _context6.sent;\n            console.info(\"Logged-in Username:\" + username);\n            return _context6.abrupt(\"return\", username);\n          case 13:\n            _context6.prev = 13;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.error('Error fetching logged-in username:', _context6.t0);\n            throw _context6.t0;\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[0, 13]]);\n    }));\n    return function getLoggedInUsername() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleUsername = function handleUsername(event) {\n    getLoggedInUsername().then(function (loggedUser) {\n      return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"username\": loggedUser\n      }));\n    });\n    ;\n  };\n  var registerUser = function registerUser() {\n    connect();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: function onClick() {\n              setTab(\"CHATROOM\");\n            },\n            className: \"member \".concat(tab === \"CHATROOM\" && \"active\"),\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, _this), _toConsumableArray(privateChats.keys()).map(function (name, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: function onClick() {\n                setTab(name);\n              },\n              className: \"member \".concat(tab === name && \"active\"),\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, _this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map(function (chat, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"message \".concat(chat.senderName === userData.username && \"self\"),\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 79\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, _this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 79\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 42\n      }, _this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: _toConsumableArray(privateChats.get(tab)).map(function (chat, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"message \".concat(chat.senderName === userData.username && \"self\"),\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 79\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, _this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 79\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 42\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '20px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginRight: '20px',\n          marginTop: '20px'\n        },\n        children: [\"You are logged in as: \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"Connect to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, _this);\n};\n_s(ChatWindow, \"uzNbajZqZbJ0KB/5a17v1lGxBqU=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatWindow","_s","_useState","Map","_useState2","_slicedToArray","privateChats","setPrivateChats","_useState3","_useState4","publicChats","setPublicChats","_useState5","_useState6","tab","setTab","_useState7","username","receivername","connected","message","_useState8","userData","setUserData","r","headers","Authorization","localStorage","getItem","handleUsername","fetchUserRole","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","role","wrap","_callee$","_context","prev","next","handleAdmin","handleClient","error","console","stop","apply","arguments","_ref2","_callee2","_callee2$","_context2","getLoggedInUsername","sent","_objectSpread","connectAdmin","t0","_ref3","_callee3","_callee3$","_context3","connectClient","Sock","connect","onConnectedAdmin","onError","onConnectedClient","subscribe","onMessageReceived","onPrivateMessage","userJoin","onConnected","fetchUsers","_ref4","_callee4","token","response","_callee4$","_context4","fetch","method","ok","abrupt","json","_ref5","_callee5","usersList","_callee5$","_context5","forEach","currentUser","index","log","concat","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","get","set","push","_toConsumableArray","list","err","handleMessage","event","value","target","sendValue","sendPrivateValue","receiverName","_ref6","_callee6","_callee6$","_context6","Error","text","info","then","loggedUser","registerUser","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_this","keys","map","name","chat","type","placeholder","onChange","style","color","fontSize","fontWeight","textAlign","marginRight","marginTop","_c","$RefreshReg$"],"sources":["/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {over} from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport './chat.css';\n\nvar stompClient =null;\nconst ChatWindow = () => {\n    const [privateChats, setPrivateChats] = useState(new Map());\n    const [publicChats, setPublicChats] = useState([]);\n    const [tab,setTab] =useState(\"CHATROOM\");\n    const [userData, setUserData] = useState({\n        username: '',\n        receivername: '',\n        connected: false,\n        message: ''\n    });\n    let r = 0;\n\n    let headers = {\n        Authorization:  localStorage.getItem('token'),\n    };\n\n    useEffect(() => {\n        handleUsername();\n        const fetchUserRole = async () => {\n            try {\n                const role = localStorage.getItem('role');\n                if (role === 'ADMIN') {\n                    handleAdmin();\n                } else {\n                    handleClient();\n                }\n            } catch (error) {\n                console.error('Error fetching user role:', error);\n            }\n        };\n\n        fetchUserRole();\n    }, []);\n\n    const handleAdmin = async () => {\n        try {\n            const username = await getLoggedInUsername();\n            setUserData({ ...userData, 'username': username });\n\n            connectAdmin();\n        } catch (error) {\n            console.error('Error handling admin:', error);\n        }\n    };\n\n    const handleClient = async () => {\n        try {\n            const username = await getLoggedInUsername();\n            setUserData({ ...userData, 'username': username });\n\n            connectClient();\n        } catch (error) {\n            console.error('Error handling client:', error);\n        }\n    };\n\n    const connectAdmin = () => {\n        let Sock = new SockJS('http://localhost:8083/ws');\n        stompClient = over(Sock);\n        stompClient.connect({}, onConnectedAdmin, onError);\n    };\n\n    const connectClient = () => {\n        let Sock = new SockJS('http://localhost:8083/ws');\n        stompClient = over(Sock);\n        stompClient.connect({}, onConnectedClient, onError);\n    };\n\n    const onConnectedAdmin = () => {\n        setUserData({ ...userData, 'connected': true });\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\n        stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n        userJoin();\n    };\n\n    const onConnectedClient = () => {\n        setUserData({ ...userData, 'connected': true });\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\n        userJoin();\n    };\n    const connect =()=>{\n        let Sock = new SockJS('http://localhost:8083/ws');\n        stompClient = over(Sock);\n        stompClient.connect({},onConnected, onError);\n    }\n\n    const onConnected = () => {\n        setUserData({...userData,\"connected\": true});\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\n        stompClient.subscribe('/user/'+userData.username+'/private', onPrivateMessage);\n        userJoin();\n    }\n    const fetchUsers = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            const role = localStorage.getItem('role');\n            let response;\n            if(role === 'ADMIN'){\n                 response = await fetch('http://localhost:8080/user/chat-clients', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': 'Bearer ' + token,\n                    },\n                });\n            }\n            else {\n                 response = await fetch('http://localhost:8080/user/chat-admins', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': 'Bearer ' + token,\n                    },\n                });\n            }\n\n\n            if (!response.ok) {\n                console.error('Failed to fetch users for chat');\n                return [];\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching  users:', error);\n            return [];\n        }\n    };\n\n    const userJoin= async ()=>{\n            const usersList = await fetchUsers();\n            usersList.forEach((currentUser, index) => {\n                console.log(`Current user ${index + 1}:`, currentUser);\n                const chatMessage = {\n                    senderName: currentUser,\n                    status: \"JOIN\"\n                };\n                stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n            });\n\n\n    }\n\n\n    const onMessageReceived = (payload)=>{\n        const payloadData = JSON.parse(payload.body);\n\n        switch(payloadData.status){\n            case \"JOIN\":\n                if(!privateChats.get(payloadData.senderName)){\n                    privateChats.set(payloadData.senderName,[]);\n                    setPrivateChats(new Map(privateChats));\n                }\n                break;\n            case \"MESSAGE\":\n                publicChats.push(payloadData);\n                setPublicChats([...publicChats]);\n                break;\n        }\n    }\n\n    const onPrivateMessage = (payload)=>{\n        const payloadData = JSON.parse(payload.body);\n        if(privateChats.get(payloadData.senderName)){\n            privateChats.get(payloadData.senderName).push(payloadData);\n            setPrivateChats(new Map(privateChats));\n        }else{\n            let list =[];\n            list.push(payloadData);\n            privateChats.set(payloadData.senderName,list);\n            setPrivateChats(new Map(privateChats));\n        }\n    }\n\n    const onError = (err) => {\n        console.log(err);\n\n    }\n\n    const handleMessage =(event)=>{\n        const {value}=event.target;\n        setUserData({...userData,\"message\": value});\n    }\n    const sendValue=()=>{\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                message: userData.message,\n                status: \"MESSAGE\"\n            };\n            console.log(chatMessage);\n            stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n            setUserData({...userData,\"message\": \"\"});\n        }\n    }\n\n    const sendPrivateValue=()=>{\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                receiverName: tab,\n                message: userData.message,\n                status: \"MESSAGE\"\n            };\n\n            if(userData.username !== tab){\n                privateChats.get(tab).push(chatMessage);\n                setPrivateChats(new Map(privateChats));\n            }\n            stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n            setUserData({...userData,\"message\": \"\"});\n        }\n    }\n    const getLoggedInUsername = async () => {\n        try {\n            const response = await fetch('http://localhost:8080/auth/username', {\n                method: 'GET',\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok.');\n            }\n\n            const username = await response.text();\n            console.info(\"Logged-in Username:\" + username);\n            return username;\n        } catch (error) {\n            console.error('Error fetching logged-in username:', error);\n            throw error;\n        }\n    };\n\n    const handleUsername=(event)=>{\n        getLoggedInUsername().then((loggedUser) => setUserData({...userData,\"username\": loggedUser}));;\n    }\n\n    const registerUser=()=>{\n        connect();\n    }\n\n\n\n\n    return (\n        <div className=\"container\">\n            {userData.connected?\n                <div className=\"chat-box\">\n                    <div className=\"member-list\">\n                        <ul>\n                            <li onClick={()=>{setTab(\"CHATROOM\")}} className={`member ${tab===\"CHATROOM\" && \"active\"}`}>Chatroom</li>\n                            {[...privateChats.keys()].map((name,index)=>(\n                                <li onClick={()=>{setTab(name)}} className={`member ${tab===name && \"active\"}`} key={index}>{name}</li>\n                            ))}\n                        </ul>\n                    </div>\n                    {tab===\"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages\">\n                            {publicChats.map((chat,index)=>(\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\n                                    <div className=\"message-data\">{chat.message}</div>\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\n                                </li>\n                            ))}\n                        </ul>\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\n                            <button type=\"button\" className=\"send-button\" onClick={sendValue}>send</button>\n                        </div>\n                    </div>}\n                    {tab!==\"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages\">\n                            {[...privateChats.get(tab)].map((chat,index)=>(\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\n                                    <div className=\"message-data\">{chat.message}</div>\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\n                                </li>\n                            ))}\n                        </ul>\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\n                            <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>send</button>\n                        </div>\n                    </div>}\n                </div>\n                :\n                <div className=\"register\">\n                    <p style={{ color: 'white', fontSize: '20px', fontWeight: 'bold', textAlign: 'center' , marginRight: '20px', marginTop: '20px'}}>\n                        You are logged in as: {userData.username}\n                    </p>\n                    <button type=\"button\" onClick={registerUser}>\n                    Connect to chat\n                    </button>\n                </div>}\n        </div>\n    )\n}\n\nexport default ChatWindow"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}