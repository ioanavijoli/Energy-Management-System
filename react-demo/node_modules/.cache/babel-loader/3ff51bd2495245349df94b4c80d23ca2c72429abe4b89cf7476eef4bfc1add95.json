{"ast":null,"code":"import _toConsumableArray from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/ioana/Desktop/Energy Management System/react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nvar ChatWindow = function ChatWindow() {\n  _s();\n  var _privateChats$get;\n  var _useState = useState(new Map()),\n    _useState2 = _slicedToArray(_useState, 2),\n    privateChats = _useState2[0],\n    setPrivateChats = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    publicChats = _useState4[0],\n    setPublicChats = _useState4[1];\n  var _useState5 = useState(\"CHATROOM\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tab = _useState6[0],\n    setTab = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    from = _useState8[0],\n    setFrom = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    to = _useState10[0],\n    setTo = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isOtherTyping = _useState12[0],\n    setIsOtherTyping = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    sentTo = _useState14[0],\n    setSentTo = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    sentFrom = _useState16[0],\n    setSentFrom = _useState16[1];\n  var _useState17 = useState({\n      username: '',\n      receivername: '',\n      connected: false,\n      message: ''\n    }),\n    _useState18 = _slicedToArray(_useState17, 2),\n    userData = _useState18[0],\n    setUserData = _useState18[1];\n  var _ref = [],\n    clients = _ref[0],\n    admins = _ref[1];\n  var role;\n  var headers = {\n    Authorization: sessionStorage.getItem('token')\n  };\n  var typingTimer;\n  useEffect(function () {\n    handleUsername();\n  }, []);\n  var connect = function connect() {\n    var Sock = new SockJS('http://localhost:8083/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  var usersList;\n  var onConnected = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n              \"connected\": true\n            }));\n            stompClient.subscribe('/chatroom/public', onMessageReceived);\n            _context.next = 4;\n            return fetchUsers();\n          case 4:\n            console.log(clients);\n            console.log(admins);\n            stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n            if (role === 'CLIENT') usersList = admins;else usersList = clients;\n            usersList.forEach(function (user) {\n              if (!privateChats.get(user)) {\n                privateChats.set(user, []);\n                setPrivateChats(new Map(privateChats));\n              }\n            });\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function onConnected() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchUsers = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var token, response, responseData;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            token = sessionStorage.getItem('token');\n            role = sessionStorage.getItem('role');\n            if (!(role === 'ADMIN')) {\n              _context2.next = 9;\n              break;\n            }\n            _context2.next = 6;\n            return fetch('http://localhost:8080/user/chat-clients', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n          case 6:\n            response = _context2.sent;\n            _context2.next = 12;\n            break;\n          case 9:\n            _context2.next = 11;\n            return fetch('http://localhost:8080/user/chat-admins', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n          case 11:\n            response = _context2.sent;\n          case 12:\n            if (response.ok) {\n              _context2.next = 15;\n              break;\n            }\n            console.error('Failed to fetch users for chat');\n            return _context2.abrupt(\"return\", []);\n          case 15:\n            _context2.next = 17;\n            return response.json();\n          case 17:\n            responseData = _context2.sent;\n            if (role === 'ADMIN') {\n              clients = responseData;\n            } else {\n              admins = responseData;\n            }\n            return _context2.abrupt(\"return\", responseData);\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Error fetching users:', _context2.t0);\n            return _context2.abrupt(\"return\", []);\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 22]]);\n    }));\n    return function fetchUsers() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var onMessageReceived = function onMessageReceived(payload) {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats(_toConsumableArray(publicChats));\n        break;\n      case \"TYPING\":\n        {\n          setIsOtherTyping(true);\n          clearTimeout(typingTimer);\n          typingTimer = setTimeout(resetTypingStatus, 2000);\n          setFrom(payloadData.senderName);\n          setTo(\"CHATROOM\");\n          break;\n        }\n    }\n  };\n  var onPrivateMessage = function onPrivateMessage(payload) {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"MESSAGE\":\n        {\n          if (privateChats.get(payloadData.senderName)) {\n            privateChats.get(payloadData.senderName).push(payloadData);\n            setPrivateChats(new Map(privateChats));\n          } else {\n            var list = [];\n            list.push(payloadData);\n            privateChats.set(payloadData.senderName, list);\n            setPrivateChats(new Map(privateChats));\n          }\n          setSentFrom(\"\");\n          setSentTo(\"\");\n          break;\n        }\n      case \"TYPING\":\n        {\n          setIsOtherTyping(true);\n          clearTimeout(typingTimer);\n          typingTimer = setTimeout(resetTypingStatus, 2000);\n          setFrom(payloadData.senderName);\n          setTo(payloadData.receiverName);\n          break;\n        }\n      case \"READ\":\n        {\n          setSentFrom(payloadData.senderName);\n          setSentTo(payloadData.receiverName);\n          clearTimeout(typingTimer);\n          typingTimer = setTimeout(resetTypingStatus, 2000);\n          break;\n        }\n    }\n  };\n  var onError = function onError(err) {\n    console.log(err);\n  };\n  var resetTypingStatus = function resetTypingStatus() {\n    setIsOtherTyping(false);\n  };\n  var handlePublicMessage = function handlePublicMessage(event) {\n    var value = event.target.value;\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      \"message\": value\n    }));\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        status: \"TYPING\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n    }\n  };\n  var handlePrivateMessage = function handlePrivateMessage(event) {\n    var value = event.target.value;\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      \"message\": value\n    }));\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        status: \"TYPING\"\n      };\n      stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n    }\n  };\n  var markAsRead = function markAsRead(event) {\n    var value = event.target.value;\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      \"message\": value\n    }));\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        status: \"READ\"\n      };\n      stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n    }\n  };\n  var sendValue = function sendValue() {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n      setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"message\": \"\"\n      }));\n    }\n  };\n  var sendPrivateValue = function sendPrivateValue() {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n      setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"message\": \"\"\n      }));\n    }\n  };\n  var getLoggedInUsername = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var response, username;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return fetch('http://localhost:8080/auth/username', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n              }\n            });\n          case 3:\n            response = _context3.sent;\n            if (response.ok) {\n              _context3.next = 6;\n              break;\n            }\n            throw new Error('Network response was not ok.');\n          case 6:\n            _context3.next = 8;\n            return response.text();\n          case 8:\n            username = _context3.sent;\n            console.info(\"Logged-in Username:\" + username);\n            return _context3.abrupt(\"return\", username);\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error('Error fetching logged-in username:', _context3.t0);\n            throw _context3.t0;\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 13]]);\n    }));\n    return function getLoggedInUsername() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleUsername = function handleUsername() {\n    getLoggedInUsername().then(function (loggedUser) {\n      return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        \"username\": loggedUser\n      }));\n    });\n  };\n  var registerUser = function registerUser() {\n    connect();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: function onClick() {\n              setTab(\"CHATROOM\");\n            },\n            className: \"member \".concat(tab === \"CHATROOM\" && \"active\"),\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, _this), _toConsumableArray(privateChats.keys()).map(function (name, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: function onClick() {\n                setTab(name);\n              },\n              className: \"member \".concat(tab === name && \"active\"),\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, _this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map(function (chat, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"message \".concat(chat.senderName === userData.username && \"self\"),\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, _this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: \"me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: isOtherTyping && to === \"CHATROOM\" && userData.username !== from ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [from, \" is typing...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 101\n          }, _this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handlePublicMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 44\n      }, _this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [_toConsumableArray(privateChats.get(tab)).map(function (chat, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"message \".concat(chat.senderName === userData.username && \"self\"),\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 37\n              }, _this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: \"me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"read-indicator\",\n            children: ((_privateChats$get = privateChats.get(tab)) === null || _privateChats$get === void 0 ? void 0 : _privateChats$get.length) > 0 && privateChats.get(tab)[privateChats.get(tab).length - 1].senderName !== tab && sentFrom === tab && sentTo === userData.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 40\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: isOtherTyping && userData.username === to && tab === from ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 94\n          }, _this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handlePrivateMessage,\n            onClick: markAsRead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 44\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '20px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          marginRight: '20px',\n          marginTop: '20px'\n        },\n        children: [\"You are logged in as: \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"Connect to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, _this);\n};\n_s(ChatWindow, \"ZPBOkT0AyZX9aVaCzs8/bM3juH0=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatWindow","_s","_privateChats$get","_useState","Map","_useState2","_slicedToArray","privateChats","setPrivateChats","_useState3","_useState4","publicChats","setPublicChats","_useState5","_useState6","tab","setTab","_useState7","_useState8","from","setFrom","_useState9","_useState10","to","setTo","_useState11","_useState12","isOtherTyping","setIsOtherTyping","_useState13","_useState14","sentTo","setSentTo","_useState15","_useState16","sentFrom","setSentFrom","_useState17","username","receivername","connected","message","_useState18","userData","setUserData","_ref","clients","admins","role","headers","Authorization","sessionStorage","getItem","typingTimer","handleUsername","connect","Sock","onConnected","onError","usersList","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","_objectSpread","subscribe","onMessageReceived","fetchUsers","console","log","onPrivateMessage","forEach","user","get","set","stop","apply","arguments","_ref3","_callee2","token","response","responseData","_callee2$","_context2","fetch","method","sent","ok","error","abrupt","json","t0","payload","payloadData","JSON","parse","body","status","push","_toConsumableArray","clearTimeout","setTimeout","resetTypingStatus","senderName","list","receiverName","err","handlePublicMessage","event","value","target","chatMessage","send","stringify","handlePrivateMessage","markAsRead","sendValue","sendPrivateValue","getLoggedInUsername","_ref4","_callee3","_callee3$","_context3","Error","text","info","then","loggedUser","registerUser","className","children","onClick","concat","fileName","_jsxFileName","lineNumber","columnNumber","_this","keys","map","name","index","chat","type","placeholder","onChange","length","style","color","fontSize","fontWeight","textAlign","marginRight","marginTop","_c","$RefreshReg$"],"sources":["/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {over} from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport './chat.css';\n\nlet stompClient = null;\nconst ChatWindow = () => {\n    const [privateChats, setPrivateChats] = useState(new Map());\n    const [publicChats, setPublicChats] = useState([]);\n    const [tab, setTab] = useState(\"CHATROOM\");\n    const [from, setFrom] = useState(\"\");\n    const [to, setTo] = useState(\"\");\n    const [isOtherTyping, setIsOtherTyping] = useState(false);\n    const [sentTo, setSentTo] = useState(\"\");\n    const [sentFrom, setSentFrom] = useState(\"\");\n    const [userData, setUserData] = useState({\n        username: '',\n        receivername: '',\n        connected: false,\n        message: ''\n    });\n    let [clients, admins] = [];\n    let role;\n    let headers = {\n        Authorization: sessionStorage.getItem('token'),\n    };\n    let typingTimer;\n\n    useEffect(() => {\n        handleUsername();\n    }, []);\n\n    const connect = () => {\n        let Sock = new SockJS('http://localhost:8083/ws');\n        stompClient = over(Sock);\n        stompClient.connect({}, onConnected, onError);\n    }\n    let usersList;\n    const onConnected = async () => {\n        setUserData({...userData, \"connected\": true});\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\n        await fetchUsers();\n        console.log(clients);\n        console.log(admins);\n        stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n        if (role === 'CLIENT')\n            usersList = admins;\n        else\n            usersList = clients;\n        usersList.forEach(user => {\n            if (!privateChats.get(user)) {\n                privateChats.set(user, []);\n                setPrivateChats(new Map(privateChats));\n            }\n        })\n\n    }\n    const fetchUsers = async () => {\n        try {\n            const token = sessionStorage.getItem('token');\n            role = sessionStorage.getItem('role');\n            let response;\n\n            if (role === 'ADMIN') {\n                response = await fetch('http://localhost:8080/user/chat-clients', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': 'Bearer ' + token,\n                    },\n                });\n            } else {\n                response = await fetch('http://localhost:8080/user/chat-admins', {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': 'Bearer ' + token,\n                    },\n                });\n            }\n\n            if (!response.ok) {\n                console.error('Failed to fetch users for chat');\n                return [];\n            }\n\n            const responseData = await response.json();\n\n            if (role === 'ADMIN') {\n                clients = responseData;\n            } else {\n                admins = responseData;\n            }\n\n            return responseData;\n        } catch (error) {\n            console.error('Error fetching users:', error);\n            return [];\n        }\n    };\n\n\n    const onMessageReceived = (payload) => {\n        const payloadData = JSON.parse(payload.body);\n        switch (payloadData.status) {\n            case \"MESSAGE\":\n                publicChats.push(payloadData);\n                setPublicChats([...publicChats]);\n                break;\n            case \"TYPING\":{\n                setIsOtherTyping(true);\n                clearTimeout(typingTimer);\n                typingTimer = setTimeout(resetTypingStatus, 2000);\n                setFrom(payloadData.senderName);\n                setTo(\"CHATROOM\");\n                break;\n            }\n        }\n    }\n\n    const onPrivateMessage = (payload) => {\n        const payloadData = JSON.parse(payload.body);\n       switch (payloadData.status) {\n            case \"MESSAGE\": {\n                if (privateChats.get(payloadData.senderName)) {\n                    privateChats.get(payloadData.senderName).push(payloadData);\n                    setPrivateChats(new Map(privateChats));\n                } else {\n                    let list = [];\n                    list.push(payloadData);\n                    privateChats.set(payloadData.senderName, list);\n                    setPrivateChats(new Map(privateChats));\n                }\n                setSentFrom(\"\");\n                setSentTo(\"\");\n                break;\n           }\n           case \"TYPING\":{\n               setIsOtherTyping(true);\n               clearTimeout(typingTimer);\n               typingTimer = setTimeout(resetTypingStatus, 2000);\n               setFrom(payloadData.senderName);\n               setTo(payloadData.receiverName);\n               break;\n           }\n           case \"READ\":{\n               setSentFrom(payloadData.senderName);\n               setSentTo(payloadData.receiverName);\n               clearTimeout(typingTimer);\n               typingTimer = setTimeout(resetTypingStatus, 2000);\n               break;\n           }\n        }\n\n    }\n\n    const onError = (err) => {\n        console.log(err);\n\n    }\n    const resetTypingStatus = () => {\n        setIsOtherTyping(false);\n    };\n    const handlePublicMessage = (event) => {\n        const {value} = event.target;\n        setUserData({...userData, \"message\": value});\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                status: \"TYPING\"\n            };\n            console.log(chatMessage);\n            stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n        }\n\n    }\n    const handlePrivateMessage = (event) => {\n        const {value} = event.target;\n        setUserData({...userData, \"message\": value});\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                receiverName: tab,\n                status: \"TYPING\"\n            };\n            stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n        }\n    }\n    const markAsRead = (event) => {\n        const {value} = event.target;\n        setUserData({...userData, \"message\": value});\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                receiverName: tab,\n                status: \"READ\"\n            };\n            stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n        }\n    }\n\n    const sendValue = () => {\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                message: userData.message,\n                status: \"MESSAGE\"\n            };\n            console.log(chatMessage);\n            stompClient.send(\"/app/message\", headers, JSON.stringify(chatMessage));\n            setUserData({...userData, \"message\": \"\"});\n        }\n    }\n\n    const sendPrivateValue = () => {\n        if (stompClient) {\n            const chatMessage = {\n                senderName: userData.username,\n                receiverName: tab,\n                message: userData.message,\n                status: \"MESSAGE\"\n            };\n\n            if (userData.username !== tab) {\n                privateChats.get(tab).push(chatMessage);\n                setPrivateChats(new Map(privateChats));\n            }\n            stompClient.send(\"/app/private-message\", headers, JSON.stringify(chatMessage));\n            setUserData({...userData, \"message\": \"\"});\n        }\n    }\n    const getLoggedInUsername = async () => {\n        try {\n            const response = await fetch('http://localhost:8080/auth/username', {\n                method: 'GET',\n                headers: {\n                    'Authorization': 'Bearer ' + sessionStorage.getItem('token'),\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok.');\n            }\n\n            const username = await response.text();\n            console.info(\"Logged-in Username:\" + username);\n            return username;\n        } catch (error) {\n            console.error('Error fetching logged-in username:', error);\n            throw error;\n        }\n    };\n\n    const handleUsername = () => {\n        getLoggedInUsername().then((loggedUser) => setUserData({...userData, \"username\": loggedUser}));\n    }\n\n    const registerUser = () => {\n        connect();\n    }\n\n    return (\n        <div className=\"container\">\n            {userData.connected ?\n                <div className=\"chat-box\">\n                    <div className=\"member-list\">\n                        <ul>\n                            <li onClick={() => {\n                                setTab(\"CHATROOM\")\n                            }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>Chatroom\n                            </li>\n                            {[...privateChats.keys()].map((name, index) => (\n                                <li onClick={() => {\n                                    setTab(name)\n                                }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\n                            ))}\n                        </ul>\n                    </div>\n                    {tab === \"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages\">\n                            {publicChats.map((chat, index) => (\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`}\n                                    key={index}>\n                                    {chat.senderName !== userData.username &&\n                                        <div className=\"avatar\">{chat.senderName}</div>}\n                                    <div className=\"message-data\">{chat.message}</div>\n                                    {chat.senderName === userData.username &&\n                                        <div className=\"avatar self\">me</div>}\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"typing-indicator\">\n                            {isOtherTyping && (to === \"CHATROOM\") && (userData.username !== from) ? <p>{from} is typing...</p> : null}\n                        </div>\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\"\n                                   value={userData.message} onChange={handlePublicMessage}/>\n                            <button type=\"button\" className=\"send-button\" onClick={sendValue}>send</button>\n                        </div>\n                    </div>}\n                    {tab !== \"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages\">\n                            {[...privateChats.get(tab)].map((chat, index) => (\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`}\n                                    key={index}\n                                >\n                                    {chat.senderName !== userData.username &&\n                                        <div className=\"avatar\">{chat.senderName}</div>}\n                                    <div className=\"message-data\">{chat.message}</div>\n                                    {chat.senderName === userData.username &&\n                                        <div className=\"avatar self\">me</div>}\n                                </li>\n                            ))}\n                            <div className=\"read-indicator\">\n                                {privateChats.get(tab)?.length > 0 &&\n                                    privateChats.get(tab)[privateChats.get(tab).length - 1].senderName !== tab &&\n                                    (sentFrom === tab) && (sentTo === userData.username)\n                                    && <p>Read</p>\n                                }\n                            </div>\n\n                        </ul>\n                        <div className=\"typing-indicator\">\n                            {isOtherTyping && (userData.username === to) && (tab === from) ? <p>Typing...</p> : null}\n                        </div>\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\"\n                                   value={userData.message} onChange={handlePrivateMessage} onClick={markAsRead}/>\n                            <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>send</button>\n                        </div>\n\n                    </div>}\n                </div>\n                :\n                <div className=\"register\">\n                    <p style={{\n                        color: 'white',\n                        fontSize: '20px',\n                        fontWeight: 'bold',\n                        textAlign: 'center',\n                        marginRight: '20px',\n                        marginTop: '20px'\n                    }}>\n                        You are logged in as: {userData.username}\n                    </p>\n                    <button type=\"button\" onClick={registerUser}>\n                        Connect to chat\n                    </button>\n                </div>}\n        </div>\n    )\n}\n\nexport default ChatWindow"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}