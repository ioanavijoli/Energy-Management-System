[{"/home/ioana/Desktop/Energy Management System/react-demo/src/index.js":"1","/home/ioana/Desktop/Energy Management System/react-demo/src/app.js":"2","/home/ioana/Desktop/Energy Management System/react-demo/src/navigation-bar.js":"3","/home/ioana/Desktop/Energy Management System/react-demo/src/home/home.js":"4","/home/ioana/Desktop/Energy Management System/react-demo/src/admin/admin.js":"5","/home/ioana/Desktop/Energy Management System/react-demo/src/admin/device-list.js":"6","/home/ioana/Desktop/Energy Management System/react-demo/src/admin/user-list.js":"7","/home/ioana/Desktop/Energy Management System/react-demo/src/client/user.js":"8","/home/ioana/Desktop/Energy Management System/react-demo/src/admin/new-user.js":"9","/home/ioana/Desktop/Energy Management System/react-demo/src/admin/new-device.js":"10","/home/ioana/Desktop/Energy Management System/react-demo/src/commons/errorhandling/error-page.js":"11","/home/ioana/Desktop/Energy Management System/react-demo/src/client/client.js":"12","/home/ioana/Desktop/Energy Management System/react-demo/src/client/user-notifications.js":"13","/home/ioana/Desktop/Energy Management System/react-demo/src/client/energy-consumption.js":"14","/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js":"15"},{"size":231,"mtime":1703940368678,"results":"16","hashOfConfig":"17"},{"size":4235,"mtime":1704205643398,"results":"18","hashOfConfig":"17"},{"size":2203,"mtime":1704205643406,"results":"19","hashOfConfig":"17"},{"size":3893,"mtime":1704205643390,"results":"20","hashOfConfig":"17"},{"size":1662,"mtime":1704015845717,"results":"21","hashOfConfig":"17"},{"size":7399,"mtime":1704375045064,"results":"22","hashOfConfig":"17"},{"size":6727,"mtime":1704205643378,"results":"23","hashOfConfig":"17"},{"size":2123,"mtime":1704375045068,"results":"24","hashOfConfig":"17"},{"size":2872,"mtime":1704205643410,"results":"25","hashOfConfig":"17"},{"size":4209,"mtime":1704375045024,"results":"26","hashOfConfig":"17"},{"size":244,"mtime":1699476498000,"results":"27","hashOfConfig":"17"},{"size":2141,"mtime":1704015801758,"results":"28","hashOfConfig":"17"},{"size":2558,"mtime":1704205643382,"results":"29","hashOfConfig":"17"},{"size":5632,"mtime":1704375045056,"results":"30","hashOfConfig":"17"},{"size":15142,"mtime":1704396140959,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"13z7cx8",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ioana/Desktop/Energy Management System/react-demo/src/index.js",[],[],["80"],"/home/ioana/Desktop/Energy Management System/react-demo/src/app.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/navigation-bar.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/home/home.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/admin/admin.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/admin/device-list.js",[],[],["81"],"/home/ioana/Desktop/Energy Management System/react-demo/src/admin/user-list.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/client/user.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/admin/new-user.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/admin/new-device.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/commons/errorhandling/error-page.js",[],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/client/client.js",["82","83"],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/client/user-notifications.js",["84"],[],"/home/ioana/Desktop/Energy Management System/react-demo/src/client/energy-consumption.js",["85","86","87"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\n\nconst EnergyConsumptionPage = () => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [devices, setDevices] = useState([]);\n    const [selectedDevice, setSelectedDevice] = useState(null);\n    const [energyData, setEnergyData] = useState([]);\n    const chartRef = useRef(null);\n\n    useEffect(() => {\n        fetchDevices();\n    }, []);\n\n    const fetchDevices = async () => {\n        try {\n            const response = await axios.get('http://localhost:8081/user/devices', {\n                headers: {\n                    'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n                },\n            });\n            setDevices(response.data);\n        } catch (error) {\n            console.error('Error fetching devices:', error);\n        }\n    };\n\n    const handleDeviceChange = (deviceId) => {\n        setSelectedDevice(deviceId);\n    };\n\n    const handleDateChange = (e) => {\n        const selectedDateTime = new Date(e.target.value);\n        setSelectedDate(selectedDateTime);\n    };\n\n    const fetchData = async () => {\n        try {\n            const formattedDate = new Date(selectedDate);\n            formattedDate.setHours(23, 59, 59);\n\n            const year = formattedDate.getFullYear();\n            const month = ('0' + (formattedDate.getMonth() + 1)).slice(-2);\n            const day = ('0' + formattedDate.getDate()).slice(-2);\n\n            const formattedDateTime = `${year}-${month}-${day}T00:00:00`;\n            const formattedEndTime = `${year}-${month}-${day}T23:59:59`;\n\n            const response = await axios.get('http://localhost:8082/history/energyconsumption', {\n                headers: {\n                    'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n                },\n                params: {\n                    deviceId: selectedDevice,\n                    dateTime: formattedDateTime,\n                    endTime: formattedEndTime,\n                },\n            });\n            setEnergyData(response.data);\n        } catch (error) {\n            console.error('Error fetching energy consumption data:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (selectedDevice && selectedDate) {\n            fetchData();\n        }\n    }, [selectedDevice, selectedDate]);\n\n    useEffect(() => {\n        if (energyData.length > 0) {\n            renderChart();\n        }\n    }, [energyData]);\n\n    useEffect(() => {\n        if (chartRef.current !== null) {\n            chartRef.current.destroy();\n            renderChart();\n        }\n    }, [selectedDate]);\n\n    const renderChart = () => {\n        const labels = energyData.map((data) => {\n            const date = new Date(data.dateTime);\n            return date.getHours().toString();\n        });\n        const values = energyData.map((data) => data.consumption);\n\n        const ctx = document.getElementById('energyChart').getContext('2d');\n\n        if (chartRef.current) {\n            chartRef.current.destroy();\n        }\n\n        chartRef.current = new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: labels,\n                datasets: [\n                    {\n                        label: 'Energy Consumption',\n                        data: values,\n                        fill: false,\n                        borderColor: 'rgb(75, 192, 192)',\n                        tension: 0.1,\n                    },\n                ],\n            },\n            options: {\n                scales: {\n                    x: {\n                        title: {\n                            display: true,\n                            text: 'Time (Hour)',\n                            color: 'white',\n                        },\n                        ticks: {\n                            color: 'white',\n                        },\n                    },\n                    y: {\n                        title: {\n                            display: true,\n                            text: 'Energy Consumption (kWh)',\n                            color: 'white',\n                        },\n                        ticks: {\n                            color: 'white',\n                        },\n                    },\n                },\n            },\n        });\n    };\n\n    return (\n        <div>\n            <h1 style={{ color: 'white' }}>Energy Consumption</h1>\n            <div>\n                <label htmlFor=\"calendar\" style={{ color: 'white' }}>Select Date:</label>\n                <input\n                    type=\"date\"\n                    id=\"calendar\"\n                    value={selectedDate.toISOString().split('T')[0]}\n                    onChange={handleDateChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"deviceDropdown\" style={{ color: 'white' }}>Select Device:</label>\n                <select id=\"deviceDropdown\" onChange={(e) => handleDeviceChange(e.target.value)}>\n                    <option value=\"\">Select</option>\n                    {Array.isArray(devices) && devices.length > 0 && devices.map((device) => (\n                        <option key={device.id} value={device.id}>\n                            {device.id}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div>\n                <h3 style={{ color: 'white' }}>Energy Consumption Chart</h3>\n                <canvas id=\"energyChart\" width=\"800\" height=\"400\"></canvas>\n            </div>\n        </div>\n    );\n};\n\nexport default EnergyConsumptionPage;\n","/home/ioana/Desktop/Energy Management System/react-demo/src/chat/chat.js",["88","89","90"],[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"91","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":16,"nodeType":"96","messageId":"97","endLine":1,"endColumn":24},{"ruleId":"94","severity":1,"message":"98","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":13,"column":8,"nodeType":"101","endLine":13,"endColumn":10,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":70,"column":8,"nodeType":"101","endLine":70,"endColumn":38,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":76,"column":8,"nodeType":"101","endLine":76,"endColumn":20,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"105","line":83,"column":8,"nodeType":"101","endLine":83,"endColumn":22,"suggestions":"107"},{"ruleId":"99","severity":1,"message":"108","line":32,"column":8,"nodeType":"101","endLine":32,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":102,"column":9,"nodeType":"112","messageId":"113","endLine":126,"endColumn":10},{"ruleId":"110","severity":1,"message":"111","line":131,"column":9,"nodeType":"112","messageId":"113","endLine":158,"endColumn":10},"no-new-object",["114"],["114"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ChatWindow' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLoggedInUsername'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["116"],"React Hook useEffect has a missing dependency: 'renderChart'. Either include it or remove the dependency array.",["117"],["118"],"React Hook useEffect has a missing dependency: 'handleUsername'. Either include it or remove the dependency array.",["119"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-object-constructor",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [getLoggedInUsername]",{"range":"130","text":"131"},"Update the dependencies array to be: [selectedDevice, selectedDate, fetchData]",{"range":"132","text":"133"},"Update the dependencies array to be: [energyData, renderChart]",{"range":"134","text":"135"},"Update the dependencies array to be: [renderChart, selectedDate]",{"range":"136","text":"137"},"Update the dependencies array to be: [handleUsername]",{"range":"138","text":"139"},[384,386],"[getLoggedInUsername]",[2331,2361],"[selectedDevice, selectedDate, fetchData]",[2468,2480],"[energyData, renderChart]",[2631,2645],"[renderChart, selectedDate]",[1019,1021],"[handleUsername]"]